pipeline {
    agent any
    environment {
        SONAR_URL = "http://13.201.43.136:9000" // Replace with your SonarQube URL
        SONAR_CREDENTIAL_ID = 'squ_48b642de47c69f6f39dcaeea5b1a491015c04047'  // Use Jenkins credentials for SonarQube token
        DOCKER_IMAGE = "python-flask-app"
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/cybersquad519/DITISS_Project.git', branch: 'master' // Replace with your Git repo URL
            }
        }
        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }
        stage('Push Docker Image') {
            steps {
                // Add steps to push the Docker image to a registry like Docker Hub or AWS ECR
                // Example for Docker Hub:
                 sh "docker login -u cybersquad519 -p DockerHub@1123"
                 sh "docker tag ${DOCKER_IMAGE} cybersquad519/${DOCKER_IMAGE}"
                 sh "docker push cybersquad519/${DOCKER_IMAGE}"
            }
        }
        stage('Deploy to Web Server') {
            steps {
                sshagent (credentials: ['your-ssh-credentials']) { // Use Jenkins credentials for SSH access
                    sh """
                    docker stop Flask-app || true
                    docker pull cybersquad519/${DOCKER_IMAGE}
                    docker run -d --name Flask-app -p 80:5000 cybersquad519/${DOCKER_IMAGE}
                    """
                }
            }
        }
    }
}
